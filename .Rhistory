geom_image(aes(image="dogggg.png")) +
geom_smooth(color="red") +
facet_wrap(~Species) +
theme(axis.title.x = element_text(face = 'bold',
color = "hotpink",
size = 16,
hjust = 0,
vjust = 0,
angle=30),
legend.text = element_text(size = 30),
legend.title = element_text(color = "green",
angle = -45,
size = 5),
strip.background = element_rect(fill = "green"),
strip.text = element_text(color = "yellow", face = "bold", vjust = 6, hjust = -5),
panel.grid.major = element_line(linewidth = 10, color = "yellow"),
panel.background = element_rect(fill = "blue"),
)
ggplot(iris, aes(x=Petal.Length, y=Sepal.Length)) +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point() +
geom_image(aes(image="dogggg.png")) +
geom_smooth(color="red") +
facet_wrap(~Species) +
labs(x="GOOD BOI") +
theme(axis.title.x = element_text(face = 'bold',
color = "hotpink",
size = 16,
hjust = 5,
vjust = -5,
angle=30),
legend.text = element_text(size = 30),
legend.title = element_text(color = "green",
angle = -45,
size = 5),
strip.background = element_rect(fill = "green"),
strip.text = element_text(color = "yellow", face = "bold", vjust = 6, hjust = 1),
panel.grid.major = element_line(linewidth = 10, color = "yellow"),
panel.background = element_rect(fill = "blue"),
)
ggplot(iris, aes(x=Petal.Length, y=Sepal.Length)) +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point() +
geom_image(aes(image="dogggg.png")) +
geom_smooth(color="red") +
facet_wrap(~Species) +
labs(x="GOOD BOI", y="puppers") +
theme(axis.title.x = element_text(face = 'bold',
color = "hotpink",
size = 16,
hjust = 5,
vjust = 5,
angle=30),
legend.text = element_text(size = 30),
legend.title = element_text(color = "green",
angle = -45,
size = 5),
strip.background = element_rect(fill = "green"),
strip.text = element_text(color = "yellow", face = "bold", vjust = 6, hjust = 1),
panel.grid.major = element_line(linewidth = 10, color = "yellow"),
panel.background = element_rect(fill = "blue"),
)
ggplot(iris, aes(x=Petal.Length, y=Sepal.Length)) +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point() +
geom_image(aes(image="dogggg.png")) +
geom_smooth(color="red") +
facet_wrap(~Species) +
labs(x="GOOD BOI", y="puppers") +
theme(axis.title.x = element_text(face = 'bold',
color = "hotpink",
size = 16,
hjust = 0,
vjust = 0,
angle=30),
legend.text = element_text(size = 30),
legend.title = element_text(color = "green",
angle = -45,
size = 5),
strip.background = element_rect(fill = "green"),
strip.text = element_text(color = "yellow", face = "bold", vjust = 6, hjust = 1),
panel.grid.major = element_line(linewidth = 10, color = "yellow"),
panel.background = element_rect(fill = "blue"),
)
library(tidyverse)
library(ggimage)
library(png)
pacman::p_load(jpeg, png, ggplot2, grid, neuropsychology)
image <- jpeg::readJPEG("zahn_n_dog.jpg")
ggplot(iris, aes(x=Petal.Length, y=Sepal.Length)) +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point() +
geom_image(aes(image="dogggg.png")) +
geom_smooth(color="red") +
facet_wrap(~Species) +
labs(x="GOOD BOI", y="puppers") +
theme(axis.title.x = element_text(face = 'bold',
color = "hotpink",
size = 16,
hjust = 0,
vjust = 0,
angle=30),
legend.text = element_text(size = 30),
legend.title = element_text(color = "green",
angle = -45,
size = 5),
strip.background = element_rect(fill = "green"),
strip.text = element_text(color = "yellow", face = "bold", vjust = 6, hjust = 1),
panel.grid.major = element_line(linewidth = 10, color = "yellow"),
panel.background = element_rect(fill = "blue"),
)
library(png)
pacman::p_load(jpeg, png, ggplot2, grid, neuropsychology)
image <- jpeg::readJPEG("zahn_n_dog.jpg")
ggplot(iris, aes(x=Petal.Length, y=Sepal.Length)) +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point() +
geom_image(aes(image="dogggg.png")) +
geom_smooth(color="red") +
facet_wrap(~Species) +
labs(x="DOGGO", y="puppers") +
theme(axis.title.x = element_text(face = 'bold',
color = "hotpink",
size = 16,
hjust = 0,
vjust = 0,
angle=30),
legend.text = element_text(size = 30),
legend.title = element_text(color = "green",
angle = -45,
size = 5),
strip.background = element_rect(fill = "green"),
strip.text = element_text(color = "yellow", face = "bold", vjust = 6, hjust = 1),
panel.grid.major = element_line(linewidth = 10, color = "yellow"),
panel.background = element_rect(fill = "blue"),
)
pacman::p_load(jpeg, png, ggplot2, grid, neuropsychology)
image <- jpeg::readJPEG("zahn_n_dog.jpg")
ggplot(iris, aes(x=Petal.Length, y=Sepal.Length)) +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point() +
geom_image(aes(image="dogggg.png")) +
geom_smooth(color="red") +
facet_wrap(~Species) +
labs(x="GOOD BOIs", y="puppers") +
theme(axis.title.x = element_text(face = 'bold',
color = "hotpink",
size = 16,
hjust = 0,
vjust = 0,
angle=30),
legend.text = element_text(size = 30),
legend.title = element_text(color = "green",
angle = -45,
size = 5),
strip.background = element_rect(fill = "green"),
strip.text = element_text(color = "yellow", face = "bold", vjust = 6, hjust = 1),
panel.grid.major = element_line(linewidth = 10, color = "yellow"),
panel.background = element_rect(fill = "blue"),
)
ggsave("ugly_plot.png")
#### tidy data rules ####
# rule 1: every variable gets its own column
# rule 2: every observation gets its own row
# rule 3: rectangular data
library(tidyverse)
table1
table1 %>%
ggplot(aes(x=year, y=cases, color=country)) +
geom_path()
table2
table3
table2 %>%
pivot_wider(names_from=type, values_from=count)
table3 %>%
separate(rate, into=c("cases","population"))
table4a
table4b
table4a %>%
pivot_longer(-country, names_to="year",values_to="cases") #-country means all the columns except country
table4b %>%
pivot_longer(-country, names_to="year",values_to="population")
full_join(table4a,table4b)
table4a %>%
pivot_longer(-country, names_to="year",values_to="cases") #-country means all the columns except country
table4b %>%
pivot_longer(-country, names_to="year",values_to="population")
a <- table4a %>%
pivot_longer(-country, names_to="year",values_to="cases") #-country means all the columns except country
b <- table4b %>%
pivot_longer(-country, names_to="year",values_to="population")
full_join(a,b)
full_join(
table4a %>%
pivot_longer(-country, names_to="year",values_to="cases") #-country means all the columns except country
table4b %>%
full_join(
table4a %>%
pivot_longer(-country, names_to="year",values_to="cases"), #-country means all the columns except country
table4b %>%
pivot_longer(-country, names_to="year",values_to="population")
)
table5
# combine em
table5 %>%
combine("century","year")
# combine em
table5 %>%
mutate(date=paste0(century,year)) #lets you build new columns based on old ones however you want, give a new column name
# combine em
table5 %>%
mutate(date=paste0(century,year) %>% as.numeric()) #lets you build new columns based on old ones however you want, give a new column name
# combine em
table5 %>%
mutate(date=paste0(century,year) %>% as.numeric()) %>%
#lets you build new columns based on old ones however you want, give a new column name
select(-century,-year)
separate(rate, into=c("cases","population"))
# combine em
table5 %>%
mutate(date=paste0(century,year) %>% as.numeric()) %>%
#lets you build new columns based on old ones however you want, give a new column name
select(-century,-year) %>%
separate(rate, into=c("cases","population"))
# combine em
table5 %>%
mutate(date=paste0(century,year) %>% as.numeric()) %>%
#lets you build new columns based on old ones however you want, give a new column name
select(-century,-year) %>%
separate(rate, into=c("cases","population"), convert=TRUE)
library(tidyverse)
# this is nice data
table1 %>%
ggplot(aes(x=year, y=cases, color=country)) +
geom_path()
# in this, cases and population should be separate columns
table2
# made information into a character that looks like a ratio
table3
# use data from type to create cases and population
table2 %>%
pivot_wider(names_from=type, values_from=count)
# separate the rate column into cases and population
table3 %>%
separate(rate, into=c("cases","population"))
# two parts, one is cases and the other is population
table4a
table4b
# method 1
a <- table4a %>%
pivot_longer(-country, names_to="year",values_to="cases") #-country means all the columns except country
b <- table4b %>%
pivot_longer(-country, names_to="year",values_to="population")
full_join(a,b)
# method 2
full_join(
table4a %>%
pivot_longer(-country, names_to="year",values_to="cases"),
table4b %>%
pivot_longer(-country, names_to="year",values_to="population")
)
# has separate century and year
table5
# combine em
table5 %>%
mutate(date=paste0(century,year) %>% as.numeric()) %>%
#lets you build new columns based on old ones however you want, give a new column name
select(-century,-year) %>%
separate(rate, into=c("cases","population"), convert=TRUE)
library(tidyverse)
library(ggimage)
library(png)
pacman::p_load(jpeg, png, ggplot2, grid, neuropsychology)
image <- jpeg::readJPEG("ugly_plot/zahn_n_dog.jpg")
ggplot(iris, aes(x=Petal.Length, y=Sepal.Length)) +
annotation_custom(rasterGrob(image,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point() +
geom_image(aes(image="ugly_plot/dogggg.png")) +
geom_smooth(color="red") +
facet_wrap(~Species) +
labs(x="GOOD BOIs", y="puppers") +
theme(axis.title.x = element_text(face = 'bold',
color = "hotpink",
size = 16,
hjust = 0,
vjust = 0,
angle=30),
legend.text = element_text(size = 30),
legend.title = element_text(color = "green",
angle = -45,
size = 5),
strip.background = element_rect(fill = "green"),
strip.text = element_text(color = "yellow", face = "bold", vjust = 6, hjust = 1),
panel.grid.major = element_line(linewidth = 10, color = "yellow"),
panel.background = element_rect(fill = "blue"),
)
ggsave("ugly_plot/ugly_plot.png")
library(tidyverse)
# this is nice data
table1 %>%
ggplot(aes(x=year, y=cases, color=country)) +
geom_path()
# in this, cases and population should be separate columns
table2
# made information into a character that looks like a ratio
table3
# use data from type to create cases and population
table2 %>%
pivot_wider(names_from=type, values_from=count)
# separate the rate column into cases and population
table3 %>%
separate(rate, into=c("cases","population"))
# two parts, one is cases and the other is population
table4a
table4b
library(tidyverse)
dat <- read_csv("../../Data/BioLog_Plate_Data.csv") # you may need to modify this path to fit where this file is stored relative to your assignment 6 script
dat <- read_csv("../Data/BioLog_Plate_Data.csv") # you may need to modify this path to fit where this file is stored relative to your assignment 6 script
dat <- read_csv("Data/BioLog_Plate_Data.csv") # you may need to modify this path to fit where this file is stored relative to your assignment 6 script
df1 <- read.csv("~/Downloads/popquize data.xlsx")
#### Practice ####
library(tidyverse)
df1 <- read.csv("~/Downloads/popquize data.xlsx")
df1 <- read.csv("~/Downloads/popquiz data.xlsx")
df1 <- read.csv("~/Downloads/popquiz data.xlsx")
install.packages("readxl")
df1 <- read_xlsx("~/Downloads/popquiz data.xlsx")
library(readxl)
df1 <- read_xlsx("~/Downloads/popquiz data.xlsx")
df1 <- read_xlsx("popquiz data.xlsx")
df1 <- read_xlsx("popquiz data.xlsx")
install.packages("janitor")
library(janitor)
# fix names (col 1)
names(df1)
clean_names(df1)
df1 <- read_xlsx("popquiz data.xlsx") %>%
clean_names()
df1
names(df1)[1]
df1
names(df1)[1] <- "site" # returns the first column name, changes it to site
df1
janitor::excel_numeric_to_date(sfi$site)
janitor::excel_numeric_to_date(df1$site)
janitor::excel_numeric_to_date(df1$site[1:3])
janitor::excel_numeric_to_date(as.numeric(df1$site[1:3])
janitor::excel_numeric_to_date(as.numeric(df1$site[1:3]))
janitor::excel_numeric_to_date(as.numeric(df1$site[1:3]))
dates <- janitor::excel_numeric_to_date(as.numeric(df1$site[1:3]))
library(lubridate)
lubridate::month(dates,)
lubridate::month(dates)
lubridate::month(dates, abbr=TRUE)
lubridate::month(dates, label=TRUE, abbr=TRUE)
lubridate::month(dates, label=TRUE, abbr=TRUE) %>%
str_to_upper()
lubridate::day(dates)
pt_2 <- lubridate::day(dates)
pt_1 <- lubridate::month(dates, label=TRUE, abbr=TRUE) %>%
str_to_upper()
paste(pt_1,pt_2,sep="-")
final <- paste(pt_1,pt_2,sep="-")
# overwrite numbers with these new strings
df1$site[1:3]
# overwrite numbers with these new strings
df1$site[1:3] <- final
df1$site[1:3]
df1
# separate column 1 into location and site
df1 %>%
separate(site, into=c("location","site"))
# separate column 1 into location and site
df1 %>%
separate(site, into=c("location","site")) %>%
pivot_longer(starts_with("week"))
# separate column 1 into location and site
df1 %>%
separate(site, into=c("location","site")) %>%
pivot_longer(starts_with("week"), names_to="week", values_to="rel_abund")
# separate column 1 into location and site and pivot the weeks longer.
df1 %>%
separate(site, into=c("location","site")) %>%
pivot_longer(starts_with("week"),
names_to = "week",
values_to = "rel_abund",
names_prefix = "week_")
# separate column 1 into location and site and pivot the weeks longer.
df1 %>%
separate(site, into=c("location","site")) %>%
pivot_longer(starts_with("week"),
names_to = "week",
values_to = "rel_abund",
names_prefix = "week_",
names_transform = as.numeric)
# separate column 1 into location and site and pivot the weeks longer.
df1 <-
df1 %>%
separate(site, into=c("location","site")) %>%
pivot_longer(starts_with("week"),
names_to = "week",
values_to = "rel_abund",
names_prefix = "week_",
names_transform = as.numeric)
df1
df2 <- read_xlsx("organized dataset.xlsx")
df2
df2$Site %>%
str_replace( "Pool","Pool")
df2$Site %>%
str_replace( "Pool","Pool")
df2$Site %>%
str_replace(" Pool","Pool")
df2$Site <-
df2$Site %>%
str_replace(" Pool","Pool")
df2 <- read_xlsx("organized dataset.xlsx") %>%
clean_names()
df2$Site <-
df2$Site %>%
str_replace(" Pool","Pool")
df2
df2 <- read_xlsx("organized dataset.xlsx") %>%
clean_names()
df2$site <-
df2$site %>%
str_replace(" Pool","Pool")
df2
df2 %>%
separate(site, into=c("location","site"))
df2 %>%
separate(site, into=c("location","site")) %>%
pivot_longer(starts_with("week"),
names_to = "week",
values_to = "rel_abund",
names_prefix = "week_",
names_transform = as.numeric)
df2 %>%
mutate(new_location = case_when(location == "SewagePool" ~ "SEP"))
df2 %>%
mutate(new_location = case_when(location == "SewagePool" ~ "SEP"),
location == "Hatchery" ~ "HAT")
df2 %>%
mutate(location = case_when(location == "SewagePool" ~ "SEP"),
location == "Hatchery" ~ "HAT")
df2 %>%
mutate(location = case_when(location == "SewagePool" ~ "SEP"),
location == "Hatchery" ~ "HAT"))
df2 %>%
mutate(location = case_when(location == "SewagePool" ~ "SEP",
location == "Hatchery" ~ "HAT"))
df2 %>%
mutate(location = case_when(location = "SewagePool" ~ "SEP",
location = "Hatchery" ~ "HAT"))
mutate()?
?mutate()
?mutate()
?case_when()
df2
df2
df2 %>%
separate(site, into=c("location","site")) %>%
pivot_longer(starts_with("week"),
names_to = "week",
values_to = "rel_abund",
names_prefix = "week_",
names_transform = as.numeric)
df2$site <-
df2 %>%
separate(site, into=c("location","site")) %>%
pivot_longer(starts_with("week"),
names_to = "week",
values_to = "rel_abund",
names_prefix = "week_",
names_transform = as.numeric)
df2 <-
df2 %>%
separate(site, into=c("location","site")) %>%
pivot_longer(starts_with("week"),
names_to = "week",
values_to = "rel_abund",
names_prefix = "week_",
names_transform = as.numeric)
df2
df2 %>%
mutate(location = case_when(location == "SewagePool" ~ "SEP",
location == "Hatchery" ~ "HAT"))
?qt()
qt(0.95, df = 199)
tStar = qt((1 - .95)/2, 200 - 1)
qt(0.95, 199)
